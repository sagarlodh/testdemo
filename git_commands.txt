git version
touch <filenamae>
git init					- to set the above directory as REPO
git status					- to see which files are in staging area or not
git log					- to see actions 
git add .					- stage all files
git add demo.txt				- stage this text file
touch .gitignore 				- create a file
git commit -m "<messsage>"			- commit the staged file
git commit -a -m  "<message>"		- directly commit any tracked files
git rm --cached demo.txt			- remove file from local repo
git rm <filename>				- remove file from WD
git remote -v				- to display the names of origin with link
git remote				- to display the names of origin
git remote add origin <https>			- to add new origin with link
git push origin master			- to push the commited files/folders to online repo
git remote set-url <newname> <https>		- to edit the originname/url
git config					- to show all working of cmds
git help config				- similar
git config --global user.<parameter> "<value>"	-
git branch 				- shows all branch
git branch <branchname> 			- to create a new branch
git checkout <branchname> 			- to change branches [should have been committed]
git checkout -b <branchname>		- to create and move to the branch 
git fetch 		 			- pull to local repo
git merge -m <branchname>			- to fast forward merge branches
git merge --abort				- to abort the merge
git difftool HEAD				- diff in local repo file and local WD file
git diff <branch1>..<branch2>			- to show wt will chaange upon merging
git branch --merged			- to show merged branches
git branch -d <branchname>			- to delete branch (use '-D' to delete without warning)
git merge <branchname>			- three way merge
git fork					- to pull into cloud git
git clone <https link> 			- to pull into local WD directory from specific link
git pull 					- up to date check
git pull origin master			- to pull the contents from curr repo into WD through merge
alias graph = "<git command>"		- to create a useable name for long cmds
git stash					-
git rebase <branchname>			- to pull changes into local repo
git rebase <branch1> <branch2>		- merges changes between branches
git commit --amend --no-edit -m ".."		- no rewording,,and commit (sort of multiple commit)
git reword, git drop, git reorder, git squashing/fixup, git split(for commit uses 'edit')
