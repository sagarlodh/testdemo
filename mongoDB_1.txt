Commands for MongoDB
````````````````````````````````````
show dbs				- list DBs (DBs with no data will not be shown)
show collections			- to show the curr collections
use <dbname>			- create DB
db.user.insertOne({"name":"ramesh"});	- to insert data[name as ramesh] or create it
db.user.find();			- to see all docs from the collection
	(similar to SELECT in SQL)
db.createCollection('<collectionname>');
db.<dbnamae>.insert({"name":"pi"}, "version":"2020"});
{upsert: true}		- to add the document to the collection or to create a new one if not present
quit()			- to quit shell
mongo --help		- help with commands
mongo --host 127.0.0.1 --port 27017 		- to connect mongoshell
db.dropDatabase(dbname)			- to delete DB
db.<collection>.drop()			- to drop a collection
db.help()					- help
show collections 				- to show collections
``````````````````````````````````````````````````````````````````
For ATLAS (from web)
```
1] create a cluster
2] define network access
3] define database access
```````````````````````````````````````````````
Schema versioning pattern		- to update from versions
Bucket Pattern
	-Tabuar approach
	- Document approach
Computed Pattern can also be used
```````````````````````````````````````````````````````````````````
Data Types for Mongo DB:
`````````````````````````````````````````
Capped collections : high throughput transactions
	db.createColection('<collectionname>', {capped:true, size:<memory>, max:<no of doc>})
	- to create a capped collection (based on memory/no of docs)
TTL indexes - (based on time)
max size is 16 MB for documents



